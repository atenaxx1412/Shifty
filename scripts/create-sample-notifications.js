import { initializeApp } from 'firebase/app';
import { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';

// Áí∞Â¢ÉÂ§âÊï∞„ÇíË™≠„ÅøËæº„Åø
import 'dotenv/config';

// FirebaseË®≠ÂÆö
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID
};

console.log('Firebase Config:', {
  projectId: firebaseConfig.projectId,
  hasApiKey: !!firebaseConfig.apiKey
});

// FirebaseÂàùÊúüÂåñ
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function createSampleNotifications() {
  console.log('üì¢ Creating sample system notifications...');
  
  try {
    const sampleNotifications = [
      {
        type: 'user_registration',
        title: 'Êñ∞„Åó„ÅÑÂ∫óÈï∑„ÅåÁôªÈå≤„Åï„Çå„Åæ„Åó„Åü',
        message: 'Áî∞‰∏≠Â§™ÈÉé„Åï„Çì„ÅåÊñ∞„Åó„ÅÑÂ∫óÈï∑„Å®„Åó„Å¶ÁôªÈå≤„Åï„Çå„Åæ„Åó„Åü',
        priority: 'medium',
        read: false
      },
      {
        type: 'security_alert',
        title: '„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç¢„É©„Éº„Éà',
        message: 'Ë§áÊï∞Âõû„ÅÆ„É≠„Ç∞„Ç§„É≥Â§±Êïó„ÅåÊ§úÂá∫„Åï„Çå„Åæ„Åó„Åü (IP: 192.168.1.100)',
        priority: 'high',
        read: false
      },
      {
        type: 'system_error',
        title: '„Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº',
        message: '„Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„ÉóÂá¶ÁêÜ„Åß„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÁÆ°ÁêÜËÄÖ„Å´ÈÄ£Áµ°„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
        priority: 'critical',
        read: false
      },
      {
        type: 'maintenance',
        title: '„É°„É≥„ÉÜ„Éä„É≥„Çπ‰∫àÂÆö',
        message: '9Êúà15Êó• 2:00-4:00„Å´„Ç∑„Çπ„ÉÜ„É†„É°„É≥„ÉÜ„Éä„É≥„Çπ„ÇíÂÆüÊñΩ„Åó„Åæ„Åô',
        priority: 'medium',
        read: false
      },
      {
        type: 'statistics',
        title: '„É¶„Éº„Ç∂„ÉºÊï∞„Åå100Âêç„ÇíÁ™ÅÁ†¥',
        message: '„Ç∑„Çπ„ÉÜ„É†Âà©Áî®ËÄÖÊï∞„Åå100Âêç„ÇíË∂Ö„Åà„Åæ„Åó„Åü„ÄÇÊàêÈï∑Áéá: ÂâçÊúàÊØî+25%',
        priority: 'low',
        read: true  // 1‰ª∂„ÅØÊó¢Ë™≠„Å´„Åó„Å¶„Åä„Åè
      },
      {
        type: 'database',
        title: '„Éá„Éº„Çø„Éô„Éº„ÇπÊúÄÈÅ©ÂåñÂÆå‰∫Ü',
        message: '„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÊúÄÈÅ©ÂåñÂá¶ÁêÜ„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Åå15%Âêë‰∏ä„Åó„Åæ„Åó„Åü„ÄÇ',
        priority: 'medium',
        read: true
      }
    ];

    const notificationsRef = collection(db, 'systemNotifications');
    
    for (const notification of sampleNotifications) {
      await addDoc(notificationsRef, {
        ...notification,
        timestamp: serverTimestamp()
      });
      console.log(`‚úÖ Created: ${notification.title}`);
    }
    
    console.log('üéâ All sample notifications created successfully!');
    console.log(`üìä Total created: ${sampleNotifications.length} notifications`);
    console.log(`üìö Unread: ${sampleNotifications.filter(n => !n.read).length}`);
    console.log(`üìñ Read: ${sampleNotifications.filter(n => n.read).length}`);
    
  } catch (error) {
    console.error('‚ùå Error creating notifications:', error);
  } finally {
    process.exit(0);
  }
}

createSampleNotifications();